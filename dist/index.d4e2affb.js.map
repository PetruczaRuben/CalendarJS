{"mappings":"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","sources":["node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addMonths/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/startOfDay/index.js","node_modules/date-fns/esm/isSameDay/index.js","node_modules/date-fns/esm/isSameMonth/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/setUTCDay/index.js","node_modules/date-fns/esm/parse/_lib/parsers/index.js","node_modules/date-fns/esm/_lib/setUTCWeek/index.js","node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/setUTCISODay/index.js","node_modules/date-fns/esm/parse/index.js","node_modules/date-fns/esm/constants/index.js","node_modules/date-fns/esm/parseISO/index.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/v4.js","modal.js","events.js","createEventElement.js","createDayElement.js","renderMonth.js","node_modules/date-fns/esm/startOfWeek/index.js","node_modules/date-fns/esm/startOfMonth/index.js","node_modules/date-fns/esm/endOfWeek/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/eachDayOfInterval/index.js","script.js"],"sourcesContent":["export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month (and year)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { format } from \"date-fns\"\nimport { v4 as uuidV4 } from \"uuid\"\n\nconst modal = document.querySelector(\"[data-modal]\")\nconst modalBody = document.querySelector(\"[data-modal-body]\")\nconst overlay = document.querySelector(\"[data-overlay]\")\noverlay.addEventListener(\"click\", closeModal)\ndocument.addEventListener(\"keydown\", e => {\n  if (e.key === \"Escape\") closeModal()\n})\n\nconst viewAllModalTemplate = document.getElementById(\"view-all-events-template\")\nexport function openViewAllModal(date, eventElements) {\n  const modalBody = viewAllModalTemplate.content.cloneNode(true)\n  modalBody.querySelector(\"[data-title]\").textContent = format(date, \"M/d/yyyy\")\n  eventElements.forEach(event => modalBody.append(event))\n  openModal(modalBody)\n}\n\nconst eventModalTemplate = document.getElementById(\"event-form-template\")\nexport function openAddEventModal(date, saveCallback) {\n  openModal(getEventFormModalBody({ date }, saveCallback))\n}\n\nexport function openEditEventModal(event, saveCallback, deleteCallback) {\n  openModal(getEventFormModalBody(event, saveCallback, deleteCallback))\n}\n\nfunction getEventFormModalBody(event, saveCallback, deleteCallback) {\n  const formModalBody = eventModalTemplate.content.cloneNode(true)\n  const isNewEvent = event.id == null\n  formModalBody.querySelector(\"[data-title]\").textContent = isNewEvent\n    ? \"Add Event\"\n    : \"Edit Event\"\n  formModalBody.querySelector(\"[data-date]\").textContent = format(\n    event.date,\n    \"M/d/yyyy\"\n  )\n\n  const form = formModalBody.querySelector(\"[data-form]\")\n  form.querySelector(\"[data-save-btn]\").textContent = isNewEvent\n    ? \"Add\"\n    : \"Update\"\n  const deleteButton = form.querySelector(\"[data-delete-btn]\")\n  if (isNewEvent) {\n    deleteButton.remove()\n  } else {\n    deleteButton.addEventListener(\"click\", () => {\n      deleteCallback(event)\n      closeModal()\n    })\n  }\n\n  const nameInput = form.querySelector(\"[data-name]\")\n  nameInput.value = event.name || \"\"\n\n  const startTimeInput = form.querySelector(\"[data-start-time]\")\n  const endTimeInput = form.querySelector(\"[data-end-time]\")\n  startTimeInput.value = event.startTime\n  endTimeInput.value = event.endTime\n\n  const allDayCheckbox = form.querySelector(\"[data-all-day]\")\n  allDayCheckbox.checked = event.isAllDay\n  startTimeInput.disabled = allDayCheckbox.checked\n  endTimeInput.disabled = allDayCheckbox.checked\n  allDayCheckbox.addEventListener(\"change\", () => {\n    startTimeInput.disabled = allDayCheckbox.checked\n    endTimeInput.disabled = allDayCheckbox.checked\n  })\n  startTimeInput.addEventListener(\"change\", () => {\n    endTimeInput.min = startTimeInput.value\n  })\n\n  const colorRadio = form.querySelector(`[data-color][value=\"${event.color}\"]`)\n  if (colorRadio) colorRadio.checked = true\n\n  form.addEventListener(\"submit\", e => {\n    e.preventDefault()\n\n    const isAllDay = allDayCheckbox.checked\n\n    saveCallback({\n      id: event.id || uuidV4(),\n      name: nameInput.value,\n      date: event.date,\n      isAllDay,\n      startTime: isAllDay ? undefined : startTimeInput.value,\n      endTime: isAllDay ? undefined : endTimeInput.value,\n      color: form.querySelector(\"[data-color]:checked\").value,\n    })\n\n    closeModal()\n  })\n\n  return formModalBody\n}\n\nfunction openModal(bodyContents) {\n  modalBody.innerHTML = \"\"\n  modalBody.append(bodyContents)\n  modal.classList.add(\"show\")\n}\n\nfunction closeModal() {\n  modal.classList.remove(\"show\")\n}\n","import { isSameDay, parseISO } from \"date-fns\"\n\nconst EVENTS_KEY = \"CALENDAR.events\"\n\nlet events = (JSON.parse(localStorage.getItem(EVENTS_KEY)) || []).map(event => {\n  return { ...event, date: parseISO(event.date) }\n})\n\nexport function addEvent(event) {\n  events.push(event)\n  save()\n}\n\nexport function updateEvent(event) {\n  events = events.map(e => {\n    if (e.id === event.id) return event\n    return e\n  })\n  save()\n}\n\nexport function removeEvent(event) {\n  events = events.filter(e => e.id !== event.id)\n  save()\n}\n\nexport function getEventsForDay(date) {\n  return events.filter(event => isSameDay(event.date, date)).sort(compareEvents)\n}\n\nfunction compareEvents(eventA, eventB) {\n  if (eventA.isAllDay && eventB.isAllDay) {\n    return 0\n  } else if (eventA.isAllDay) {\n    return -1\n  } else if (eventB.isAllDay) {\n    return 1\n  } else {\n    return (\n      eventTimeToNumber(eventA.startTime) - eventTimeToNumber(eventB.startTime)\n    )\n  }\n}\n\nfunction eventTimeToNumber(time) {\n  return parseFloat(time.replace(\":\", \".\"))\n}\n\nfunction save() {\n  localStorage.setItem(EVENTS_KEY, JSON.stringify(events))\n}\n","import { format, parse } from \"date-fns\"\nimport { openEditEventModal } from \"./modal\"\nimport renderMonth from \"./renderMonth\"\nimport { removeEvent, updateEvent } from \"./events\"\n\nexport default function createEventElement(event) {\n  const element = event.isAllDay\n    ? createAllDayEventElement(event)\n    : createTimedEventElement(event)\n\n  element.addEventListener(\"click\", () => {\n    openEditEventModal(\n      event,\n      updatedEvent => {\n        updateEvent(updatedEvent)\n        renderMonth(updatedEvent.date)\n      },\n      deletedEvent => {\n        removeEvent(deletedEvent)\n        renderMonth(deletedEvent.date)\n      }\n    )\n  })\n\n  return element\n}\n\nconst allDayEventTemplate = document.getElementById(\"all-day-event-template\")\nfunction createAllDayEventElement(event) {\n  const element = allDayEventTemplate.content\n    .cloneNode(true)\n    .querySelector(\"[data-event]\")\n\n  element.classList.add(event.color)\n  element.querySelector(\"[data-name]\").textContent = event.name\n  return element\n}\n\nconst timedEventTemplate = document.getElementById(\"timed-event-template\")\nfunction createTimedEventElement(event) {\n  const element = timedEventTemplate.content\n    .cloneNode(true)\n    .querySelector(\"[data-event]\")\n  element.querySelector(\"[data-name]\").textContent = event.name\n  element.querySelector(\"[data-color]\").classList.add(event.color)\n  element.querySelector(\"[data-time]\").textContent = format(\n    parse(event.startTime, \"HH:mm\", event.date),\n    \"h:mmaaa\"\n  )\n  return element\n}\n","import { format } from \"date-fns\"\nimport createEventElement from \"./createEventElement\"\nimport { addEvent, getEventsForDay } from \"./events\"\nimport { openAddEventModal, openViewAllModal } from \"./modal\"\nimport renderMonth from \"./renderMonth\"\n\nconst dayTemplate = document.getElementById(\"day-template\")\nexport default function createDayElement(date, options = {}) {\n  const {\n    isCurrentMonth = true,\n    isCurrentDay = false,\n    showWeekName = false,\n  } = options\n\n  const dayElement = dayTemplate.content\n    .cloneNode(true)\n    .querySelector(\"[data-date-wrapper]\")\n\n  if (!isCurrentMonth) {\n    dayElement.classList.add(\"non-month-day\")\n  }\n\n  if (showWeekName) {\n    dayElement.querySelector(\"[data-week-name]\").textContent = format(date, \"E\")\n  }\n\n  dayElement\n    .querySelector(\"[data-add-event-btn]\")\n    .addEventListener(\"click\", () => {\n      openAddEventModal(date, event => {\n        addEvent(event)\n        renderMonth(date)\n      })\n    })\n\n  dayElement\n    .querySelector(\"[data-view-more-btn]\")\n    .addEventListener(\"click\", () => {\n      openViewAllModal(date, getEventsForDay(date).map(createEventElement))\n    })\n\n  const dayNumberElement = dayElement.querySelector(\"[data-day-number]\")\n  dayNumberElement.textContent = date.getDate()\n  if (isCurrentDay) {\n    dayNumberElement.classList.add(\"active\")\n  }\n\n  const eventContainer = dayElement.querySelector(\"[data-event-container]\")\n  eventContainer.innerHTML = \"\"\n  getEventsForDay(date).forEach(event => {\n    eventContainer.append(createEventElement(event))\n  })\n\n  return dayElement\n}\n","import {\n  startOfMonth,\n  startOfWeek,\n  endOfMonth,\n  endOfWeek,\n  eachDayOfInterval,\n  isSameMonth,\n  isSameDay,\n  format,\n} from \"date-fns\"\nimport createDayElement from \"./createDayElement\"\n\nconst daysContainer = document.querySelector(\"[data-calendar-days]\")\nexport default function renderMonth(monthDate) {\n  document.querySelector(\"[data-month-title]\").textContent = format(\n    monthDate,\n    \"MMMM yyyy\"\n  )\n  const dayElements = getCalendarDates(monthDate).map((date, index) => {\n    return createDayElement(date, {\n      isCurrentMonth: isSameMonth(monthDate, date),\n      isCurrentDay: isSameDay(Date.now(), date),\n      showWeekName: index < 7,\n    })\n  })\n  daysContainer.innerHTML = \"\"\n  dayElements.forEach(element => daysContainer.append(element))\n  dayElements.forEach(fixEventOverflow)\n}\n\nexport function fixEventOverflow(dateContainer) {\n  const eventContainer = dateContainer.querySelector(\"[data-event-container]\")\n  const viewMoreButton = dateContainer.querySelector(\"[data-view-more-btn]\")\n  const events = eventContainer.querySelectorAll(\"[data-event]\")\n  viewMoreButton.classList.add(\"hide\")\n  events.forEach(event => event.classList.remove(\"hide\"))\n  for (let i = events.length - 1; i >= 0; i--) {\n    if (dateContainer.scrollHeight <= dateContainer.clientHeight) break\n    events[i].classList.add(\"hide\")\n    viewMoreButton.classList.remove(\"hide\")\n    viewMoreButton.textContent = `+ ${events.length - i} More`\n  }\n}\n\nfunction getCalendarDates(date) {\n  const firstWeekStart = startOfWeek(startOfMonth(date), { weekStartsOn: 1 })\n  const lastWeekStart = endOfWeek(endOfMonth(date), { weekStartsOn: 1 })\n  return eachDayOfInterval({ start: firstWeekStart, end: lastWeekStart })\n}\n","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import { addMonths } from \"date-fns\"\nimport renderMonth, { fixEventOverflow } from \"./renderMonth\"\n\nlet selectedMonth = Date.now()\ndocument.querySelector(\"[data-next-month-btn\").addEventListener(\"click\", () => {\n  selectedMonth = addMonths(selectedMonth, 1)\n  renderMonth(selectedMonth)\n})\n\ndocument.querySelector(\"[data-prev-month-btn\").addEventListener(\"click\", () => {\n  selectedMonth = addMonths(selectedMonth, -1)\n  renderMonth(selectedMonth)\n})\n\ndocument.querySelector(\"[data-today-btn\").addEventListener(\"click\", () => {\n  selectedMonth = Date.now()\n  renderMonth(selectedMonth)\n})\n\nlet resizeTimeout\nwindow.addEventListener(\"resize\", () => {\n  if (resizeTimeout) clearTimeout(resizeTimeout)\n  resizeTimeout = setTimeout(() => {\n    document.querySelectorAll(\"[data-date-wrapper]\").forEach(fixEventOverflow)\n  }, 100)\n})\n\nrenderMonth(selectedMonth)\n"],"names":["$a874c42e2166676d$export$2e2bcd8739ae039","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","$377d1ce359384586$export$2e2bcd8739ae039","required","args","length","TypeError","$bce2d00733a79246$export$2e2bcd8739ae039","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","$a8211859f65764ad$export$2e2bcd8739ae039","dirtyDate","dirtyAmount","date","amount","dayOfMonth","getDate","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","$6fd1c9a3eeaafbe4$export$2e2bcd8739ae039","value","$93a8d45f3f5c7cb9$export$2e2bcd8739ae039","$1c4e78b8ee7f66d8$var$formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","$1c4e78b8ee7f66d8$export$2e2bcd8739ae039","token","count","options","result","tokenValue","replace","addSuffix","comparison","$05b7040d79e43f9d$export$2e2bcd8739ae039","undefined","width","String","defaultWidth","format","formats","$b99de2b03d4f39be$var$formatLong","full","long","medium","short","time","dateTime","$117705cf2af2348d$var$formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","$eda89c8f88184c82$export$2e2bcd8739ae039","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","$c309fdccb9ef673a$export$2e2bcd8739ae039","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","$c309fdccb9ef673a$var$findIndex","pattern","test","$c309fdccb9ef673a$var$findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","$0ca880ce53ce49f9$export$2e2bcd8739ae039","code","formatDistance","formatLong","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","$5fd7da45fede2458$export$2e2bcd8739ae039","timestamp","$6673cc5b62dfa592$export$2e2bcd8739ae039","$8b6bcc549b1c1b29$export$2e2bcd8739ae039","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","$56d5b29bd1df6af4$export$2e2bcd8739ae039","year","getUTCFullYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","$4e98b4d5a2488885$export$2e2bcd8739ae039","fourthOfJanuary","$e2b4503c694c959a$export$2e2bcd8739ae039","round","$0dfbcd4e04a34858$export$2e2bcd8739ae039","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","$efe8c2ce4ac4bd36$export$2e2bcd8739ae039","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","$5b38b39a484f4993$export$2e2bcd8739ae039","firstWeek","$c4c2445bc457b574$export$2e2bcd8739ae039","$88335940ad51fc8f$export$2e2bcd8739ae039","targetLength","sign","output","abs","$8dea7dd01f0b97c2$export$2e2bcd8739ae039","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","$d91e238bf521c720$var$dayPeriodEnum","$d91e238bf521c720$var$formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","$d91e238bf521c720$var$formatTimezoneWithOptionalMinutes","$d91e238bf521c720$var$formatTimezone","$d91e238bf521c720$export$2e2bcd8739ae039","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","$dbfee7256f9ba04c$export$2e2bcd8739ae039","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","t","originalDate","T","$4f085685fa15e740$var$dateLongFormatter","$4f085685fa15e740$var$timeLongFormatter","$4f085685fa15e740$export$2e2bcd8739ae039","p","P","dateTimeFormat","datePattern","timePattern","$6eb366e006a8b659$export$2e2bcd8739ae039","utcDate","UTC","getHours","getMinutes","getSeconds","getMilliseconds","$a5375092e28b891e$var$protectedDayOfYearTokens","$a5375092e28b891e$var$protectedWeekYearTokens","$a5375092e28b891e$export$c6cc36aa33304772","indexOf","$a5375092e28b891e$export$c6b49d6dceb604a1","$a5375092e28b891e$export$8073c1ae88f0e727","input","concat","$4e349bc0dbb08c36$var$formattingTokensRegExp","$4e349bc0dbb08c36$var$longFormattingTokensRegExp","$4e349bc0dbb08c36$var$escapedStringRegExp","$4e349bc0dbb08c36$var$doubleQuoteRegExp","$4e349bc0dbb08c36$var$unescapedLatinCharacterRegExp","$4e349bc0dbb08c36$export$2e2bcd8739ae039","dirtyFormatStr","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","$4e349bc0dbb08c36$var$cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","$9445ecc5e7cfb647$export$2e2bcd8739ae039","setHours","$c9ad0c9b51445ea3$export$2e2bcd8739ae039","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","$8085a298e92e1718$export$2e2bcd8739ae039","dateLeft","dateRight","$4c58fe0eb0761e95$export$2e2bcd8739ae039","target","dirtyObject","property","$cd47f247bdfd58ed$export$2e2bcd8739ae039","dirtyDay","currentDay","remainder","dayIndex","$c1027c3b7f83f29d$var$numericPatterns","$c1027c3b7f83f29d$var$timezonePatterns","$c1027c3b7f83f29d$var$parseNumericPattern","$c1027c3b7f83f29d$var$parseTimezonePattern","$c1027c3b7f83f29d$var$parseAnyDigitsSigned","$c1027c3b7f83f29d$var$parseNDigits","n","RegExp","$c1027c3b7f83f29d$var$parseNDigitsSigned","$c1027c3b7f83f29d$var$dayPeriodEnumToHours","enumValue","$c1027c3b7f83f29d$var$normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","$c1027c3b7f83f29d$var$DAYS_IN_MONTH","$c1027c3b7f83f29d$var$DAYS_IN_MONTH_LEAP_YEAR","$c1027c3b7f83f29d$var$isLeapYearIndex","$c1027c3b7f83f29d$export$2e2bcd8739ae039","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","$78111b508c05f859$export$2e2bcd8739ae039","dirtyISOWeek","$e5bdf6fda1ca18fd$export$2e2bcd8739ae039","subPriority","isLeapYear","wholeWeekDays","$7ae224ed93d5e7cb$export$2e2bcd8739ae039","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","$7a460707bf147158$var$formattingTokensRegExp","$7a460707bf147158$var$longFormattingTokensRegExp","$7a460707bf147158$var$escapedStringRegExp","$7a460707bf147158$var$doubleQuoteRegExp","$7a460707bf147158$var$notWhitespaceRegExp","$7a460707bf147158$var$unescapedLatinCharacterRegExp","$7a460707bf147158$var$dateToSystemTimezone","convertedDate","$7a460707bf147158$var$cleanEscapedString","$9c2d1611e11d9224$export$2e2bcd8739ae039","additionalDigits","dateStrings","$9c2d1611e11d9224$var$splitDateString","parseYearResult","$9c2d1611e11d9224$var$parseYear","$9c2d1611e11d9224$var$parseDate","restDateString","$9c2d1611e11d9224$var$parseTime","timezone","$9c2d1611e11d9224$var$parseTimezone","$9c2d1611e11d9224$var$patterns","dateTimeDelimiter","timeZoneDelimiter","$9c2d1611e11d9224$var$dateRegex","$9c2d1611e11d9224$var$timeRegex","$9c2d1611e11d9224$var$timezoneRegex","dateString","timeString","split","substr","exec","regex","captures","century","isWeekDate","$9c2d1611e11d9224$var$parseDateUnit","_year","$9c2d1611e11d9224$var$validateWeekDate","isoWeekYear","fourthOfJanuaryDay","$9c2d1611e11d9224$var$dayOfISOWeekYear","$9c2d1611e11d9224$var$daysInMonths","$9c2d1611e11d9224$var$isLeapYearIndex","$9c2d1611e11d9224$var$validateDate","$9c2d1611e11d9224$var$validateDayOfYearDate","max","$9c2d1611e11d9224$var$parseTimeUnit","seconds","$9c2d1611e11d9224$var$validateTime","parseFloat","timezoneString","_hours","$9c2d1611e11d9224$var$validateTimezone","$568f4ee4022ba00e$var$getRandomValues","$568f4ee4022ba00e$var$rnds8","Uint8Array","$568f4ee4022ba00e$export$2e2bcd8739ae039","crypto","getRandomValues","bind","msCrypto","$32c496bfb6c27b56$export$2e2bcd8739ae039","$46d323206dcbf256$export$2e2bcd8739ae039","uuid","$1d0137947e8554ce$var$byteToHex","$1d0137947e8554ce$var$i","push","$1d0137947e8554ce$export$2e2bcd8739ae039","arr","$3fa3ae484854b431$export$2e2bcd8739ae039","buf","rnds","random","rng","$bbf50a43660d3335$var$modal","document","querySelector","$bbf50a43660d3335$var$modalBody","addEventListener","$bbf50a43660d3335$var$closeModal","$bbf50a43660d3335$var$viewAllModalTemplate","getElementById","$bbf50a43660d3335$var$eventModalTemplate","$bbf50a43660d3335$var$getEventFormModalBody","event","saveCallback","deleteCallback","formModalBody","content","cloneNode","isNewEvent","id","textContent","form","deleteButton","remove","nameInput","name","startTimeInput","endTimeInput","startTime","endTime","allDayCheckbox","checked","isAllDay","disabled","min","colorRadio","color","preventDefault","$bbf50a43660d3335$var$openModal","bodyContents","innerHTML","append","classList","add","$8fbcb54b1ec70a6b$var$events","JSON","localStorage","getItem","$8fbcb54b1ec70a6b$export$e2572468fb9b0fd1","filter","sort","$8fbcb54b1ec70a6b$var$compareEvents","eventA","eventB","$8fbcb54b1ec70a6b$var$eventTimeToNumber","$8fbcb54b1ec70a6b$var$save","setItem","stringify","$7527667986b4a493$export$2e2bcd8739ae039","element","$7527667986b4a493$var$allDayEventTemplate","$7527667986b4a493$var$createAllDayEventElement","$7527667986b4a493$var$timedEventTemplate","dirtyDateString","dirtyFormatString","dirtyReferenceDate","formatString","subFnOptions","setters","tokens","usedTokens","firstCharacter1","parser","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","setterArray","setter1","$7a460707bf147158$export$2e2bcd8739ae039","$7527667986b4a493$var$createTimedEventElement","$bbf50a43660d3335$export$15330dea65c617c8","updatedEvent","$8fbcb54b1ec70a6b$export$e59a6c1448f0e14e","$5f86663cb197ba07$export$2e2bcd8739ae039","deletedEvent","$8fbcb54b1ec70a6b$export$b5ed465d99f3f1c3","$7bbd820f9edff305$var$dayTemplate","$7bbd820f9edff305$export$2e2bcd8739ae039","isCurrentMonth","isCurrentDay","showWeekName","dayElement","$bbf50a43660d3335$export$2fe750e2cc45675e","$8fbcb54b1ec70a6b$export$f531f92e2a15358f","eventElements","modalBody","forEach","$bbf50a43660d3335$export$82671496ed158670","dayNumberElement","eventContainer","$5f86663cb197ba07$var$daysContainer","monthDate","dayElements","firstWeekStart","getDay","setDate","$5808e7e2a5fbbc4c$export$2e2bcd8739ae039","$41c3cc0836893904$export$2e2bcd8739ae039","lastWeekStart","$52a761315a8e3e9c$export$2e2bcd8739ae039","$f5125f9e9edab43e$export$2e2bcd8739ae039","dirtyInterval","interval","startDate","start","end","dates","currentDate","step","$f8e0936f0e85f082$export$2e2bcd8739ae039","$5f86663cb197ba07$var$getCalendarDates","now","$5f86663cb197ba07$export$9d59e92a3ed621d1","dateContainer","viewMoreButton","events","querySelectorAll","scrollHeight","clientHeight","$c1ce9d969bfa6909$var$resizeTimeout","$c1ce9d969bfa6909$var$selectedMonth","window","clearTimeout","setTimeout"],"version":3,"file":"index.d4e2affb.js.map"}